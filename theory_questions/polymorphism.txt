

    Polymorphism
        --- Polymorphism means having many forms. 
            Typically, polymorphism occurs when there 
            is a hierarchy of classes and they are related by inheritance.

            It can be used in c++ by the use of virtual function in
            the base class. (i.e function overriding)

                [
                    example no-4
                ]


    Two types of polymorphism in c++
        1, Compile-time
            {   The polymorphism achived during the compile time of the program
                is known as compile-time polymorphism.
                It is also known as static or early binding.
            
                It can be achived through function overloading and operator overloading 
            }
            { 
              Function overloading is a compile-time polymorphism which is achived by
              overloading the same function to behave differently in different condition.
              
              It is done by giving the same function different number of arguments
              or different types of arguments
            }
            { 
              Operator overloading is a compile-time polymorphism which is achived by
              overloading the operators to behave differently in different condition.
              
              look example for way to overload operator
            }
                [ 
                     Example - 6 (function overloading)
                     Example - 7 (operator overloading)
                ]

        2, Run-time
            {   The polymorphism achived during the run time of the program i.e when the
                program is running is known as run-time polymorphism.
                It is also known as dynamic or late binding.

                It can be achived through function overriding
            }

            {
                Function overriding is a run-time polymorphism that is achieved when a 
                function with same definiton in parent class is overwritten by the same
                function in the sub class.
            }

                [
                    Example - 4
                ]